name: Java CI + Build & Push to GHCR

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: ghcr.io/h2danilo/exemplos-design-patterns

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      # A etapa 'mvn package' foi removida, pois a compilação agora é feita
      # de forma mais eficiente dentro do Dockerfile.

      - name: Read project version
        id: vars
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          SHORT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-7)
          BRANCH=$(echo "${GITHUB_REF_NAME}" | tr '/' '-')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "short_sha=${SHORT_SHA}" >> $GITHUB_OUTPUT
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        if: github.event_name == 'push'
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Nova etapa unificada que constrói, aplica tags e envia a imagem.
      - name: Build, Tag and Push Docker image
        if: github.event_name == 'push'
        run: |
          VERSION="${{ steps.vars.outputs.version }}"
          BRANCH="${{ steps.vars.outputs.branch }}"
          SHA="${{ steps.vars.outputs.short_sha }}"
          IMAGE_REPO="${{ env.IMAGE_REPO }}"

          # 1. Constrói a imagem a partir do Dockerfile
          docker build -t "${IMAGE_REPO}:${VERSION}" .

          # 2. Adiciona as tags adicionais
          docker tag "${IMAGE_REPO}:${VERSION}" "${IMAGE_REPO}:${BRANCH}-${SHA}"
          if [ "${{ github.ref_name }}" = "main" ]; then
            docker tag "${IMAGE_REPO}:${VERSION}" "${IMAGE_REPO}:latest"
          fi

          # 3. Envia todas as tags para o registry (GHCR)
          docker push --all-tags "${IMAGE_REPO}"